(this.webpackJsonpcleanreed=this.webpackJsonpcleanreed||[]).push([[0],{37:function(e,t,a){},38:function(e,t,a){},66:function(e,t,a){"use strict";a.r(t);var s=a(1),n=a.n(s),c=a(30),r=a.n(c),i=(a(37),a(4)),o=a(5),l=a(7),j=a(6),b=(a(38),a.p+"static/media/CleanReed.dcb56c25.svg"),d=a(0),u=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(){return Object(i.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return Object(d.jsx)("div",{className:"appBuildFont",children:Object(d.jsxs)("h2",{className:"appIntro",children:["CleanReed is designed to be a more organized and minimalist approach for browsing subreddit pages. The end goals for this projects are:",Object(d.jsx)("br",{}),"1) To automatically take posts from any subreddit you choose from and displaying everything neatly in rows,",Object(d.jsx)("br",{}),"2) Allowing users to also securely link their reddit account credentials with the app",Object(d.jsx)("br",{}),"3) For my small React app to be used as a tool/add-on/extension by regular reddit users"]})})}}]),a}(n.a.Component),h=(a(15),a(12)),p=a.n(h),O=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(e){var s;return Object(i.a)(this,a),(s=t.call(this)).state={data:[]},s}return Object(o.a)(a,[{key:"componentDidMount",value:function(){var e=this;p.a.get("https://www.reddit.com/r/all.json").then((function(t){var a=t.data.data.children.map((function(e){return e.data}));e.setState({data:a})}))}},{key:"render",value:function(){var e=this.state.data;return Object(d.jsx)("ul",{children:e.map((function(e){return Object(d.jsxs)("li",{className:"postBox col",children:[" ",Object(d.jsx)("a",{href:e.url,children:Object(d.jsx)("img",{classname:"img-fluid",src:e.thumbnail,alt:"[No img is available for the selected post]"})})," ",Object(d.jsx)("br",{}),Object(d.jsx)("span",{className:"postTitle",children:e.title.slice(0,75)}),Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postAuthorStyle",children:["by ",e.author," |"]}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["\ud83d\udc4d ",e.ups," upvotes |"]}),Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["From /r/",e.subreddit,"/"]})]},e.permalink)}))})}}]),a}(n.a.Component),m=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(e){var s;return Object(i.a)(this,a),(s=t.call(this)).state={data:[]},s}return Object(o.a)(a,[{key:"componentDidMount",value:function(){var e=this;p.a.get("https://www.reddit.com/r/dataisbeautiful.json").then((function(t){var a=t.data.data.children.map((function(e){return e.data}));e.setState({data:a})}))}},{key:"render",value:function(){var e=this.state.data;return Object(d.jsx)("ul",{children:e.map((function(e){return Object(d.jsxs)("li",{className:"postBox col",children:[" ",Object(d.jsx)("a",{href:e.url,children:Object(d.jsx)("img",{classname:"img-fluid",src:e.thumbnail,alt:"[No img is available for the selected post]"})})," ",Object(d.jsx)("br",{}),Object(d.jsx)("span",{className:"postTitle",children:e.title.slice(0,75)}),Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postAuthorStyle",children:["by ",e.author," |"]}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["\ud83d\udc4d ",e.ups," upvotes"]})]},e.permalink)}))})}}]),a}(n.a.Component),x=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(e){var s;return Object(i.a)(this,a),(s=t.call(this)).state={data:[]},s}return Object(o.a)(a,[{key:"componentDidMount",value:function(){var e=this;p.a.get("https://www.reddit.com/r/programming.json").then((function(t){var a=t.data.data.children.map((function(e){return e.data}));e.setState({data:a})}))}},{key:"render",value:function(){var e=this.state.data;return Object(d.jsx)("ul",{children:e.map((function(e){return Object(d.jsxs)("li",{className:"postBoxProgpage col",children:[e.thumbnail," ",Object(d.jsx)("a",{href:e.url,children:Object(d.jsx)("span",{className:"postTitle",children:e.title.slice(0,75)})})," ",Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postAuthorStyle",children:["by ",e.author," |"]}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["\ud83d\udc4d ",e.ups," upvotes"]})]},e.permalink)}))})}}]),a}(n.a.Component),f=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(e){var s;return Object(i.a)(this,a),(s=t.call(this)).state={data:[]},s}return Object(o.a)(a,[{key:"componentDidMount",value:function(){var e=this;p.a.get("https://www.reddit.com/r/todayilearned.json").then((function(t){var a=t.data.data.children.map((function(e){return e.data}));e.setState({data:a})}))}},{key:"render",value:function(){var e=this.state.data;return Object(d.jsx)("ul",{children:e.map((function(e){return Object(d.jsxs)("li",{className:"postBox col",children:[" ",Object(d.jsx)("a",{href:e.url,children:Object(d.jsx)("img",{classname:"img-fluid",src:e.thumbnail,alt:"[No img is available for the selected post]"})})," ",Object(d.jsx)("br",{}),Object(d.jsx)("span",{className:"postTitle",children:e.title.slice(0,75)}),Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postAuthorStyle",children:["by ",e.author," |"]}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["\ud83d\udc4d ",e.ups," upvotes"]})]},e.permalink)}))})}}]),a}(n.a.Component),g=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(e){var s;return Object(i.a)(this,a),(s=t.call(this)).state={data:[]},s}return Object(o.a)(a,[{key:"componentDidMount",value:function(){var e=this;p.a.get("https://www.reddit.com/r/astrophotography.json").then((function(t){var a=t.data.data.children.map((function(e){return e.data}));e.setState({data:a})}))}},{key:"render",value:function(){var e=this.state.data;return Object(d.jsx)("ul",{children:e.map((function(e){return Object(d.jsxs)("li",{className:"postBox col",children:[" ",Object(d.jsx)("a",{href:e.url,children:Object(d.jsx)("img",{classname:"img-fluid",src:e.thumbnail,alt:"[No img is available for the selected post]"})})," ",Object(d.jsx)("br",{}),Object(d.jsx)("span",{className:"postTitle",children:e.title.slice(0,75)}),Object(d.jsx)("br",{}),Object(d.jsxs)("span",{className:"postAuthorStyle",children:["by ",e.author," |"]}),Object(d.jsxs)("span",{className:"postUpvoteStyle",children:["\ud83d\udc4d ",e.ups," upvotes"]})]},e.permalink)}))})}}]),a}(n.a.Component),v=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(){return Object(i.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return Object(d.jsxs)("div",{className:"AboutPageStyle",children:[Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),Object(d.jsx)("h1",{children:"Created using: Axios, React and Bootstrap"}),Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),Object(d.jsxs)("h2",{className:"abtPageRes",children:[" ",Object(d.jsx)("a",{href:"https://github.com/Toughee/CleanReed/projects/1",children:"App roadmap"})," "]}),Object(d.jsxs)("h2",{className:"abtPageRes",children:[" ",Object(d.jsx)("a",{href:"https://github.com/Toughee/CleanReed/wiki",children:"App wiki"})," "]}),Object(d.jsxs)("h2",{className:"abtPageRes",children:[" ",Object(d.jsx)("a",{href:"https://github.com/Toughee/CleanReed/tree/main/docs",children:"Documentation for contributors"})," "]}),Object(d.jsxs)("h2",{className:"abtPageRes",children:[" ",Object(d.jsx)("a",{href:"https://github.com/Toughee/CleanReed",children:"Github page"})," "]})]})}}]),a}(n.a.Component),y=a(13),N=a(2),P=function(e){Object(l.a)(a,e);var t=Object(j.a)(a);function a(){return Object(i.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return Object(d.jsx)("div",{className:"App",children:Object(d.jsxs)("header",{className:"",children:[Object(d.jsx)("li",{children:Object(d.jsx)("img",{className:"mainIcon",alt:"CleanReed-Icon",src:b})}),Object(d.jsxs)(y.a,{children:[Object(d.jsx)(y.b,{to:"/HomePage",children:Object(d.jsx)("li",{children:"Home"})}),Object(d.jsx)(y.b,{to:"/AllPage",children:Object(d.jsx)("li",{children:"General"})}),Object(d.jsx)(y.b,{to:"/ProgPage",children:Object(d.jsx)("li",{children:"Programming"})}),Object(d.jsx)(y.b,{to:"/DTBPage",children:Object(d.jsx)("li",{children:"Data Is Beautiful"})}),Object(d.jsx)(y.b,{to:"/TLPage",children:Object(d.jsx)("li",{children:"Today I Learned"})}),Object(d.jsx)(y.b,{to:"/ApPage",children:Object(d.jsx)("li",{children:"AstroPhotography"})}),Object(d.jsx)(y.b,{to:"/AboutPage",children:Object(d.jsx)("li",{children:"About"})}),Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),Object(d.jsx)("br",{}),Object(d.jsx)(N.a,{path:"/HomePage",component:u}),Object(d.jsx)(N.a,{path:"/AllPage",component:O}),Object(d.jsx)(N.a,{path:"/DTBPage",component:m}),Object(d.jsx)(N.a,{path:"/ProgPage",component:x}),Object(d.jsx)(N.a,{path:"/TLPage",component:f}),Object(d.jsx)(N.a,{path:"/ApPage",component:g}),Object(d.jsx)(N.a,{path:"/AboutPage",component:v})]})]})})}}]),a}(n.a.Component),k=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,67)).then((function(t){var a=t.getCLS,s=t.getFID,n=t.getFCP,c=t.getLCP,r=t.getTTFB;a(e),s(e),n(e),c(e),r(e)}))};r.a.render(Object(d.jsx)(n.a.StrictMode,{children:Object(d.jsx)(P,{})}),document.getElementById("root")),k()}},[[66,1,2]]]);
//# sourceMappingURL=main.8c9eef67.chunk.js.map